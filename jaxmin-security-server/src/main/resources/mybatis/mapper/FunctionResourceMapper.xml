<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jamxin.security.server.dao.FunctionResourceMapper">
  <resultMap id="BaseResultMap" type="com.jamxin.security.server.domain.FunctionResource">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="function_id" jdbcType="BIGINT" property="functionId" />
    <result column="resource_id" jdbcType="BIGINT" property="resourceId" />
    <result column="is_available" jdbcType="INTEGER" property="isAvailable" />
    <result column="is_deleted" jdbcType="INTEGER" property="isDeleted" />
    <result column="version_no" jdbcType="INTEGER" property="versionNo" />
    <result column="create_userid" jdbcType="BIGINT" property="createUserid" />
    <result column="create_username" jdbcType="VARCHAR" property="createUsername" />
    <result column="create_userip" jdbcType="VARCHAR" property="createUserip" />
    <result column="create_usermac" jdbcType="VARCHAR" property="createUsermac" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="create_time_db" jdbcType="TIMESTAMP" property="createTimeDb" />
    <result column="server_ip" jdbcType="VARCHAR" property="serverIp" />
    <result column="update_userid" jdbcType="BIGINT" property="updateUserid" />
    <result column="update_username" jdbcType="VARCHAR" property="updateUsername" />
    <result column="update_userip" jdbcType="VARCHAR" property="updateUserip" />
    <result column="update_usermac" jdbcType="VARCHAR" property="updateUsermac" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="update_time_db" jdbcType="TIMESTAMP" property="updateTimeDb" />
    <result column="client_versionno" jdbcType="VARCHAR" property="clientVersionno" />
  </resultMap>
  <sql id="Base_Column_List">
    id, function_id, resource_id, is_available, is_deleted, version_no, create_userid, 
    create_username, create_userip, create_usermac, create_time, create_time_db, server_ip, 
    update_userid, update_username, update_userip, update_usermac, update_time, update_time_db, 
    client_versionno
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from jx_function_resource
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from jx_function_resource
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.jamxin.security.server.domain.FunctionResource">
    insert into jx_function_resource (id, function_id, resource_id, 
      is_available, is_deleted, version_no, 
      create_userid, create_username, create_userip, 
      create_usermac, create_time, create_time_db, 
      server_ip, update_userid, update_username, 
      update_userip, update_usermac, update_time, 
      update_time_db, client_versionno)
    values (#{id,jdbcType=BIGINT}, #{functionId,jdbcType=BIGINT}, #{resourceId,jdbcType=BIGINT}, 
      #{isAvailable,jdbcType=INTEGER}, #{isDeleted,jdbcType=INTEGER}, #{versionNo,jdbcType=INTEGER}, 
      #{createUserid,jdbcType=BIGINT}, #{createUsername,jdbcType=VARCHAR}, #{createUserip,jdbcType=VARCHAR}, 
      #{createUsermac,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{createTimeDb,jdbcType=TIMESTAMP}, 
      #{serverIp,jdbcType=VARCHAR}, #{updateUserid,jdbcType=BIGINT}, #{updateUsername,jdbcType=VARCHAR}, 
      #{updateUserip,jdbcType=VARCHAR}, #{updateUsermac,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{updateTimeDb,jdbcType=TIMESTAMP}, #{clientVersionno,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.jamxin.security.server.domain.FunctionResource">
    insert into jx_function_resource
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="functionId != null">
        function_id,
      </if>
      <if test="resourceId != null">
        resource_id,
      </if>
      <if test="isAvailable != null">
        is_available,
      </if>
      <if test="isDeleted != null">
        is_deleted,
      </if>
      <if test="versionNo != null">
        version_no,
      </if>
      <if test="createUserid != null">
        create_userid,
      </if>
      <if test="createUsername != null">
        create_username,
      </if>
      <if test="createUserip != null">
        create_userip,
      </if>
      <if test="createUsermac != null">
        create_usermac,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="createTimeDb != null">
        create_time_db,
      </if>
      <if test="serverIp != null">
        server_ip,
      </if>
      <if test="updateUserid != null">
        update_userid,
      </if>
      <if test="updateUsername != null">
        update_username,
      </if>
      <if test="updateUserip != null">
        update_userip,
      </if>
      <if test="updateUsermac != null">
        update_usermac,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="updateTimeDb != null">
        update_time_db,
      </if>
      <if test="clientVersionno != null">
        client_versionno,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="functionId != null">
        #{functionId,jdbcType=BIGINT},
      </if>
      <if test="resourceId != null">
        #{resourceId,jdbcType=BIGINT},
      </if>
      <if test="isAvailable != null">
        #{isAvailable,jdbcType=INTEGER},
      </if>
      <if test="isDeleted != null">
        #{isDeleted,jdbcType=INTEGER},
      </if>
      <if test="versionNo != null">
        #{versionNo,jdbcType=INTEGER},
      </if>
      <if test="createUserid != null">
        #{createUserid,jdbcType=BIGINT},
      </if>
      <if test="createUsername != null">
        #{createUsername,jdbcType=VARCHAR},
      </if>
      <if test="createUserip != null">
        #{createUserip,jdbcType=VARCHAR},
      </if>
      <if test="createUsermac != null">
        #{createUsermac,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTimeDb != null">
        #{createTimeDb,jdbcType=TIMESTAMP},
      </if>
      <if test="serverIp != null">
        #{serverIp,jdbcType=VARCHAR},
      </if>
      <if test="updateUserid != null">
        #{updateUserid,jdbcType=BIGINT},
      </if>
      <if test="updateUsername != null">
        #{updateUsername,jdbcType=VARCHAR},
      </if>
      <if test="updateUserip != null">
        #{updateUserip,jdbcType=VARCHAR},
      </if>
      <if test="updateUsermac != null">
        #{updateUsermac,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTimeDb != null">
        #{updateTimeDb,jdbcType=TIMESTAMP},
      </if>
      <if test="clientVersionno != null">
        #{clientVersionno,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.jamxin.security.server.domain.FunctionResource">
    update jx_function_resource
    <set>
      <if test="functionId != null">
        function_id = #{functionId,jdbcType=BIGINT},
      </if>
      <if test="resourceId != null">
        resource_id = #{resourceId,jdbcType=BIGINT},
      </if>
      <if test="isAvailable != null">
        is_available = #{isAvailable,jdbcType=INTEGER},
      </if>
      <if test="isDeleted != null">
        is_deleted = #{isDeleted,jdbcType=INTEGER},
      </if>
      <if test="versionNo != null">
        version_no = #{versionNo,jdbcType=INTEGER},
      </if>
      <if test="createUserid != null">
        create_userid = #{createUserid,jdbcType=BIGINT},
      </if>
      <if test="createUsername != null">
        create_username = #{createUsername,jdbcType=VARCHAR},
      </if>
      <if test="createUserip != null">
        create_userip = #{createUserip,jdbcType=VARCHAR},
      </if>
      <if test="createUsermac != null">
        create_usermac = #{createUsermac,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTimeDb != null">
        create_time_db = #{createTimeDb,jdbcType=TIMESTAMP},
      </if>
      <if test="serverIp != null">
        server_ip = #{serverIp,jdbcType=VARCHAR},
      </if>
      <if test="updateUserid != null">
        update_userid = #{updateUserid,jdbcType=BIGINT},
      </if>
      <if test="updateUsername != null">
        update_username = #{updateUsername,jdbcType=VARCHAR},
      </if>
      <if test="updateUserip != null">
        update_userip = #{updateUserip,jdbcType=VARCHAR},
      </if>
      <if test="updateUsermac != null">
        update_usermac = #{updateUsermac,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTimeDb != null">
        update_time_db = #{updateTimeDb,jdbcType=TIMESTAMP},
      </if>
      <if test="clientVersionno != null">
        client_versionno = #{clientVersionno,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jamxin.security.server.domain.FunctionResource">
    update jx_function_resource
    set function_id = #{functionId,jdbcType=BIGINT},
      resource_id = #{resourceId,jdbcType=BIGINT},
      is_available = #{isAvailable,jdbcType=INTEGER},
      is_deleted = #{isDeleted,jdbcType=INTEGER},
      version_no = #{versionNo,jdbcType=INTEGER},
      create_userid = #{createUserid,jdbcType=BIGINT},
      create_username = #{createUsername,jdbcType=VARCHAR},
      create_userip = #{createUserip,jdbcType=VARCHAR},
      create_usermac = #{createUsermac,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_time_db = #{createTimeDb,jdbcType=TIMESTAMP},
      server_ip = #{serverIp,jdbcType=VARCHAR},
      update_userid = #{updateUserid,jdbcType=BIGINT},
      update_username = #{updateUsername,jdbcType=VARCHAR},
      update_userip = #{updateUserip,jdbcType=VARCHAR},
      update_usermac = #{updateUsermac,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      update_time_db = #{updateTimeDb,jdbcType=TIMESTAMP},
      client_versionno = #{clientVersionno,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <cache />
</mapper>